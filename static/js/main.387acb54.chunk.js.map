{"version":3,"sources":["api/tool-functions.js","api/api.js","components/ExtendedInfoCard.js","components/PekemonList.js","App.js","reportWebVitals.js","index.js"],"names":["functionWithPromise","item","request","anAsyncFunction","a","getData","urls","Promise","all","map","wait","delay","resolve","setTimeout","url","options","fetch","then","res","ok","Error","status","statusText","json","getPekemonExtendedInfo","id","extendedInfoServerObj","pekemonTypeFromServer","types","type","name","preparedExtInfo","pekemonType","attack","stats","base_stat","defense","hp","spAttack","spDefense","speed","weight","totalMoves","moves","length","picture","getMarkUpInfo","gotten","results","pekemon","pekemonNames","linksToExtandedInfo","typesofPekemons","pekemonIds","pekemonCardInfo","next","info","getPekemonTypes","ExtendedInfoCard","extendedPekInfo","console","log","className","src","alt","padStart","join","PekemonList","pekemons","extendedInfoHandler","data-link","onClick","Math","random","App","useState","setPekemons","visiblePekemons","setVisiblePekemons","furtherLoadingLink","setFurtherLoadingLink","setExtendedPekInfo","pekemonTypesList","setPekemonTypesList","typeCriterion","setTypeCriterion","loading","switchLoading","buttonRef","useRef","updateLoadedDate","link","result","current","useEffect","scrollIntoView","behavior","value","onChange","event","target","criterion","filteredPekemons","filter","includes","handleVisiblePekFilter","classnames","ref","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.387acb54.chunk.js","sourcesContent":["import { request } from \"./api\";\r\n\r\nconst functionWithPromise = item => {\r\n\r\n  return request(item);\r\n};\r\nconst anAsyncFunction = async (item) => {\r\n  return functionWithPromise(item);\r\n};\r\nexport const getData = async (urls) => {\r\n  return Promise.all(urls.map(item => anAsyncFunction(item)));\r\n};\r\nexport function wait(delay) {\r\n  return new Promise(resolve => setTimeout(resolve, delay));\r\n}\r\n","import { wait, getData } from \"./tool-functions\";\r\n\r\nexport const request = (url, options) => {\r\n  return fetch(`${url}`, options)\r\n    .then((res) => {\r\n      if (!res.ok) {\r\n        throw new Error(`${res.status} - ${res.statusText}`);\r\n      }\r\n\r\n      return res.json();\r\n    });\r\n};\r\n\r\nexport const getPekemonExtendedInfo = async(id) => {\r\n  const extendedInfoServerObj = await request(`http://pokeapi.co/api/v2/pokemon/${id}`);\r\n\r\n  const pekemonTypeFromServer = extendedInfoServerObj.types.map(item => item.type.name);\r\n\r\n  const preparedExtInfo = {\r\n    name: extendedInfoServerObj.name, \r\n    id: id,\r\n    pekemonType: pekemonTypeFromServer,\r\n    attack: extendedInfoServerObj.stats[1].base_stat,\r\n    defense: extendedInfoServerObj.stats[2].base_stat,\r\n    hp: extendedInfoServerObj.stats[0].base_stat,\r\n    spAttack: extendedInfoServerObj.stats[3].base_stat,\r\n    spDefense: extendedInfoServerObj.stats[4].base_stat,\r\n    speed: extendedInfoServerObj.stats[5].base_stat,\r\n    weight: extendedInfoServerObj.weight,\r\n    totalMoves: extendedInfoServerObj.moves.length,\r\n    picture: `https://pokeres.bastionbot.org/images/pokemon/${id}.png`\r\n  }\r\n\r\n  return preparedExtInfo;\r\n} \r\n\r\nexport const getMarkUpInfo = async(url) => {\r\n  await wait(200);\r\n  const pekemonNames = await request(url).then((gotten) => gotten.results.map((pekemon) => pekemon.name));\r\n  const linksToExtandedInfo = await request(url).then((gotten) => gotten.results.map((pekemon) => pekemon.url) );\r\n  const typesofPekemons = (await getData(linksToExtandedInfo)).map(item => item.types.map(item => item.type.name));\r\n  const pekemonIds = (await getData(linksToExtandedInfo)).map(item => item.id);\r\n\r\n\r\n  const pekemonCardInfo = pekemonNames.map((item, id) => {\r\n\r\n    return {\r\n      name: item,\r\n      types: typesofPekemons[id],\r\n      id: pekemonIds[id],\r\n    }\r\n  }).map(item => ({...item, picture: `https://pokeres.bastionbot.org/images/pokemon/${item.id}.png`}))\r\n\r\n  const info = {\r\n    next: await request(url).then((gotten) => gotten.next),\r\n    pekemonCardInfo,\r\n  }\r\n\r\n  return info;\r\n}\r\n\r\nexport const getPekemonTypes = async() => {\r\n  return await request(\"https://pokeapi.co/api/v2/type?limit=999\").then((gotten => gotten.results.map(item => item.name)));\r\n}","import React from 'react';\r\n\r\nexport function ExtendedInfoCard({ extendedPekInfo }) {\r\n\r\n  console.log(extendedPekInfo.pekemonType);\r\n\r\n  return (\r\n    <div className=\"extended-info-card\">\r\n      <img src={extendedPekInfo.picture} alt='jg' className=\"extended-info-card__picture\" />\r\n      <h2 className=\"extended-info-card__title\">{extendedPekInfo.name}{` #`}{`${extendedPekInfo.id}`.padStart(3, '0')}</h2>\r\n      <table className=\"extended-info-card__stats\">\r\n        <tr>\r\n          <td className=\"extended-info-card__property-name\">Type</td>\r\n          <td className=\"extended-info-card__property-value\">{extendedPekInfo.pekemonType.join(' ')}</td>\r\n        </tr>\r\n        <tr>\r\n          <td className=\"extended-info-card__property-name\">Attack</td>\r\n          <td className=\"extended-info-card__property-value\">{extendedPekInfo.attack}</td>\r\n        </tr>\r\n        <tr>\r\n          <td className=\"extended-info-card__property-name\">Defense</td>\r\n          <td className=\"extended-info-card__property-value\">{extendedPekInfo.defense}</td>\r\n        </tr>\r\n        <tr>\r\n          <td className=\"extended-info-card__property-name\">HP</td>\r\n          <td className=\"extended-info-card__property-value\">{extendedPekInfo.hp}</td>\r\n        </tr>\r\n        <tr>\r\n          <td className=\"extended-info-card__property-name\">SP Attack</td>\r\n          <td className=\"extended-info-card__property-value\">{extendedPekInfo.spAttack}</td>\r\n        </tr>\r\n        <tr>\r\n          <td className=\"extended-info-card__property-name\">SP Defense</td>\r\n          <td className=\"extended-info-card__property-value\">{extendedPekInfo.spDefense}</td>\r\n        </tr>\r\n        <tr>\r\n          <td className=\"extended-info-card__property-name\">Speed</td>\r\n          <td className=\"extended-info-card__property-value\">{extendedPekInfo.speed}</td>\r\n        </tr>\r\n        <tr>\r\n          <td className=\"extended-info-card__property-name\">Weight</td>\r\n          <td className=\"extended-info-card__property-value\">{extendedPekInfo.weight}</td>\r\n        </tr>\r\n        <tr>\r\n          <td className=\"extended-info-card__property-name\">Total moves</td>\r\n          <td className=\"extended-info-card__property-value\">{extendedPekInfo.totalMoves}</td>\r\n        </tr>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport function PekemonList({ pekemons, extendedInfoHandler }) {\r\n\r\n  return (\r\n    <div className=\"cards-gallery\">\r\n      {pekemons.map((pekemon, id) => (\r\n        <div\r\n          className=\"cards-gallery__card\"\r\n          data-link={pekemon.linksToExtandedInfo}\r\n          key={pekemon.id * Math.random()}\r\n          onClick={() => {\r\n            extendedInfoHandler(pekemon.id);\r\n          }}\r\n        >\r\n          <div className=\"cards-gallery__card-picture-container\">\r\n            <img className=\"cards-gallery__card-picture\" src={pekemon.picture} alt='' />\r\n          </div>\r\n          <h3 className=\"cards-gallery__card-title\">\r\n            {pekemon.name}\r\n          </h3>\r\n          <div className=\"cards-gallery__card-types\">\r\n            {pekemon.types.map(type => (\r\n              <div key={type} className={`cards-gallery__card-type ${type}`}>\r\n                {type}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react';\nimport 'bulma'\nimport { getMarkUpInfo, getPekemonExtendedInfo, getPekemonTypes } from './api/api'\nimport './styles/App.scss';\nimport classnames from 'classnames';\nimport { ExtendedInfoCard } from './components/ExtendedInfoCard';\nimport { PekemonList } from './components/PekemonList';\n\nfunction App() {\n\n\n  const [pekemons, setPekemons] = useState([]);\n  const [visiblePekemons, setVisiblePekemons] = useState(pekemons)\n  const [furtherLoadingLink, setFurtherLoadingLink] = useState('');\n  const [extendedPekInfo, setExtendedPekInfo] = useState(null);\n  const [pekemonTypesList, setPekemonTypesList] = useState(null);\n  const [typeCriterion, setTypeCriterion] = useState('');\n  const [loading, switchLoading] = useState(false);\n  const buttonRef = useRef(null);\n\n  const updateLoadedDate = (link) => {\n    setTypeCriterion('all');\n    getMarkUpInfo(link)\n    .then(result => {\n      console.log(result);\n      setFurtherLoadingLink(result.next);\n      setPekemons(current => [...current, ...result.pekemonCardInfo]);\n      switchLoading(false);\n    });\n  }\n\n  const extendedInfoHandler = (id) => {\n    getPekemonExtendedInfo(id)\n      .then(gotten => {\n        setExtendedPekInfo(gotten);\n      });\n  }\n\n  const handleVisiblePekFilter = (criterion) => {\n    if(criterion === \"all\") {\n      setVisiblePekemons(pekemons)\n    }else {\n      const filteredPekemons = pekemons.filter(pekemon => pekemon.types.includes(criterion));\n      setVisiblePekemons(filteredPekemons);\n    }\n\n  }\n\n  useEffect(() => {\n    updateLoadedDate('http://pokeapi.co/api/v2/pokemon/?limit=12');\n    getPekemonTypes().then((gotten) => {\n      console.log('here', gotten);\n      setPekemonTypesList(gotten);\n    })\n  },[])\n\n  useEffect(() => {\n    console.log('done');\n    setVisiblePekemons(pekemons);\n  }, [ pekemons]);\n\n  useEffect(() => {\n    console.log('well-done');\n    buttonRef.current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [ visiblePekemons])\n\n  return (\n    <>\n    <h1 className=\"page-title\">Pokedex</h1>\n    <br />\n    <div className=\"main-content\">\n      <div className=\"initial-mark-up-container\">\n      <select\n        className=\"select is-normal\"\n        value={typeCriterion}\n        onChange={(event) => {\n          setTypeCriterion(event.target.value);\n          handleVisiblePekFilter(event.target.value);\n        }}\n      >\n        <option value='all'>\n          all\n        </option>\n      {pekemonTypesList?.map(type => (\n        <option key={type} value={type}>\n          {type}\n        </option>\n      ))}\n    </select>\n      <PekemonList pekemons={visiblePekemons} extendedInfoHandler={extendedInfoHandler} />\n      <button\n      className={classnames('loading-button', 'button', 'is-info', {'is-loading': loading})}\n      type=\"button\"\n      ref={buttonRef}\n      onClick={ () => {\n        switchLoading(true);\n        updateLoadedDate(furtherLoadingLink);\n      }}\n    >\n      Load More\n    </button>\n      </div>\n      <div className=\"extended-info-container\">\n        {extendedPekInfo && <ExtendedInfoCard extendedPekInfo={extendedPekInfo} />}\n      </div>\n    </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}